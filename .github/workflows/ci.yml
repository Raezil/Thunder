name: Thunder CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    name: Run Tests and Generate Coverage
    runs-on: ubuntu-latest
    env:
      JWT_SECRET: "testsecret"

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: thunder
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Dependencies
        run: go mod tidy
        
      - name: Generate SSL Certificates
        run: |
          mkdir -p certs
          openssl req -x509 -newkey rsa:4096 -keyout certs/server.key -out certs/server.crt -days 365 -nodes \
            -subj "/CN=localhost" \
            -addext "subjectAltName=DNS:localhost,IP:127.0.0.1"

      - name: Run Unit Tests
        run: go test -v ./...

      - name: Run Integration Tests (gRPC + REST)
        run: go test -v ./pkg/db ./pkg/middlewares/ ./pkg/services/ ./pkg/services/generated

      - name: Generate Coverage Report
        run: go test -coverprofile=coverage.txt ./pkg/db ./pkg/middlewares/ ./pkg/services/ ./pkg/services/generated

      - name: Print Coverage Summary
        run: go tool cover -func=coverage.txt

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.txt

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Optional for public repositories
          file: coverage.txt
          fail_ci_if_error: true
          verbose: true